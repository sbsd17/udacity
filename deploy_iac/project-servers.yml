AWSTemplateFormatVersion: 2010-09-09
Description: IAC Project Servers Templates
Parameters:
  EnvironmentName:
    Type: String
Resources:
  LoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Allows http traffic to LB
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-vpcid"
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  WebAppSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Allows http traffic
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-vpcid"
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      InstanceType: t3.medium
      ImageId: ami-0e081ed4ce61c1fb2
      SecurityGroups:
        - !Ref WebAppSG
      # KeyName: "VocareumKey2"
      BlockDeviceMappings: 
        - DeviceName: "/dev/sdm"
          Ebs:
            VolumeSize: "10"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install apache2 -y
          systemctl start apache2.service
          echo "It works! Udagram, Udacity" > /var/www/html/index.html
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-vpcid"
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue: 
            !Sub "${EnvironmentName}-priv-sn"
      LaunchConfigurationName:
        Ref: LaunchConfiguration
      MinSize: '4'
      MaxSize: '4'
      DesiredCapacity: '4'
      TargetGroupARNs:
        - Ref: TargetGroup
      HealthCheckGracePeriod: 60
      HealthCheckType: ELB
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - Fn::ImportValue: !Sub "${EnvironmentName}-pub1-sn"
        - Fn::ImportValue: !Sub "${EnvironmentName}-pub2-sn"
      SecurityGroups:
        - Ref: LoadBalancerSG
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: TargetGroup
      LoadBalancerArn:
        Ref: LoadBalancer
      Port: '80'
      Protocol: HTTP
  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref TargetGroup
      Conditions:
      - Field: path-pattern
        Values: [/]
      ListenerArn: !Ref Listener
      Priority: 1
Outputs:
  LoadBalancer:
    Description: Reference to load balancer DNS name
    Value: !Join [ "", [ "http://", !GetAtt LoadBalancer.DNSName ]]
    Export:
      Name: !Sub ${EnvironmentName}-lb-dnsname
